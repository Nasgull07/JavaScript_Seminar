// Funci칩n para obtener un usuario de una API
function getUser(userId) {
  return fetch(`https://jsonplaceholder.typicode.com/users/${userId}`)
    .then(response => {
      if (!response.ok) throw new Error("Error al obtener el usuario");
      return response.json();
    });
}

// Funci칩n para obtener los posts de un usuario
function getPosts(userId) {
  return fetch(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`)
    .then(response => {
      if (!response.ok) throw new Error("Error al obtener los posts");
      return response.json();
    });
}

// Funci칩n para obtener los comentarios del post
function getComments(postId) {
  return fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`)
    .then(response => {
      if (!response.ok) throw new Error("Error al obtener comentarios del post");
      return response.json();
    });
}

async function fetchOrderDetails() {
  try {
    const user = await getUser(1);
    const posts = await getPosts(user.id);
    const comments = await getComments(posts[0].id);

    console.log("Comentarios del primer post:", comments);
    console.log("Fin");
  } catch (error) {
    console.error("Error:", error);
  }
}

console.log("Inicio");

//fetchOrderDetails();

async function buscarComentariosPost(){
    try {
        const user = await getUser(1);
        const posts = await getPosts(user.id);
        const comments = await Promise.all(posts.map(async post => await getComments(post.id)));
        // Una vez que se han obtenido todos los comentarios de todos los posts, se mostraran solo los comentarios que tengan postId par y id impar, ademas estaran ordenados de postId menor a mayor i se le a침adira al final del nombre la string "nombre"
        const allComments = comments.flat();
        const modifiedComents = allComments
        .filter((comment) => comment.postId % 2 === 0)
        .filter((comment) => comment.id % 2 !== 0)
        .sort((a, b) => a.postId - b.postId)
        .map((comment) => {
            comment.name = comment.name + " nombre";
            return comment;
        });
        console.log(modifiedComents);
        console.log("Fin");
      } catch (error) {
        console.error("Error:", error);
      }
}
buscarComentariosPost();



